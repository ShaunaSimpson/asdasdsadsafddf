do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==5) then function v15(v16,v17,...)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then local v65=0;while true do if (v65==0) then v19=v1(v4(v30,1,1));return "";end end else local v66=v3(v1(v30,16));if v19 then local v73=v6(v66,v19);v19=nil;return v73;else return v66;end end end);local function v20(v31,v32,v33)if v33 then local v67=(v31/(((8 -4) -2)^(v32-(667 -(192 + 474)))))%((1 + 1)^(((v33-(1 + 0)) -(v32-(592 -(525 + 66)))) + 1 + 0));return v67-(v67%(2 -1));else local v68=0 + 0;local v69;while true do if (v68==0) then v69=(3 -1)^(v32-1);return (((v31%(v69 + v69))>=v69) and (354 -(132 + (675 -(352 + 102))))) or (0 -0);end end end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39,v40=v2(v16,v18,v18 + 2 + 0);v18=v18 + 2;return (v40 * (126 + 130)) + v39;end local function v23()local v41=0 + (1083 -(723 + 360));local v42;local v43;local v44;local v45;while true do if (v41==1) then return (v45 * (2795415 + 13981801)) + (v44 * (116682 -51146)) + (v43 * ((1867 -(1333 + 386)) + 108)) + v42;end if (v41==(0 -(583 -(254 + 329)))) then v42,v43,v44,v45=v2(v16,v18,v18 + (4 -1));v18=v18 + 3 + 1;v41=153 -((662 -(203 + 331)) + 24);end end end local function v24()local v46=0;local v47;local v48;while true do if ((1 -0)==v46) then return (( -(187 -(36 + 149)) * v20(v48,32)) + ((1 + 0) -0)) * ((1979 -(416 + 1561))^(v20(v48,21,50 -19) -(733 + 290))) * ((((v20(v48,2 -1,42 -22) * (((7 -4) -1)^((169 -117) -20))) + v47)/(2^(1200 -(643 + 505)))) + (2 -1));end if (v46==(0 + 0 + 0)) then v47=v23();v48=v23();v46=(1865 -(1287 + 142)) -(100 + 335);end end end local function v25(v34)local v49;if  not v34 then local v70=592 -(89 + 503);while true do if (v70==(0 + 0)) then v34=v23();if (v34==(0 -0)) then return "";end break;end end end v49=v4(v16,v18,(v18 + v34) -(1 + 0));v18=v18 + v34;local v50={};for v63=1 + 0 + 0, #v49 do v50[v63]=v3(v2(v4(v49,v63,v63)));end return v7(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0 + 0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51==(1 + 2)) then v58=nil;while true do local v74=0 -0;while true do if (v74~=(1863 -(961 + 902))) then else local v80=587 -(457 + 130);while true do if (v80==(85 -(48 + 36))) then v74=1426 -(733 + 692);break;end if (0==v80) then if (v52~=2) then else local v101=0 + 0;while true do if (v101==0) then for v106=2 -1,v57 do local v107=0 + 0;local v108;local v109;while true do if (v107~=0) then else local v116=39 -(16 + 23);local v117;while true do if (v116~=(0 -0)) then else v117=0;while true do if (v117~=(1 + 0)) then else v107=1;break;end if (v117==(0 + 0)) then v108=v21();v109=nil;v117=1;end end break;end end end if (v107==(2 -1)) then if (v108==(1 + 0)) then v109=v21()~=(0 -0);elseif (v108==2) then v109=v24();elseif (v108==3) then v109=v25();end v58[v106]=v109;break;end end end v56[1 + 2]=v21();v101=1 + 0;end if ((1 + 0)==v101) then for v110=1210 -(620 + 589),v23() do local v111=0 + 0;local v112;local v113;local v114;while true do if (v111==0) then v112=0 -0;v113=nil;v111=1;end if (v111~=1) then else v114=nil;while true do if (v112==(0 -0)) then local v120=306 -(193 + 113);while true do if (v120~=(902 -(686 + 216))) then else v113=0 -0;v114=nil;v120=1 + 0;end if (v120==(1 + 0)) then v112=1;break;end end end if ((1 + 0)~=v112) then else while true do if (v113~=(0 -0)) then else v114=v21();if (v20(v114,1,936 -(647 + 288))==(0 + 0)) then local v220=0 -0;local v221;local v222;local v223;local v224;while true do if (v220==(3 -1)) then while true do if (v221~=(194 -(90 + 102))) then else if (v20(v223,3 -2,1)==(1 + 0)) then v224[2]=v58[v224[2]];end if (v20(v223,2 + 0,1 + 1)~=1) then else v224[3]=v58[v224[764 -(425 + 336)]];end v221=9 -6;end if ((3 + 0)~=v221) then else if (v20(v223,3,3)==(1 + 0)) then v224[3 + 1]=v58[v224[4]];end v53[v110]=v224;break;end if (v221==0) then local v271=1778 -(470 + 1308);while true do if (v271==(1 + 0)) then v221=2 -1;break;end if (v271==(624 -(496 + 128))) then local v299=0;while true do if (v299~=(1 + 0)) then else v271=1;break;end if (v299~=(0 -0)) then else v222=v20(v114,4 -2,4 -1);v223=v20(v114,6 -2,6);v299=1 + 0;end end end end end if (v221~=(1 + 0)) then else local v272=451 -(225 + 226);local v273;while true do if (v272==(926 -(288 + 638))) then v273=1494 -(1290 + 204);while true do if (v273==(73 -(43 + 29))) then v221=1 + 1;break;end if (v273~=0) then else v224={v22(),v22(),nil,nil};if (v222==0) then local v323=0 + 0;local v324;local v325;while true do if (v323==(1764 -(575 + 1188))) then while true do if (v324==(1428 -(395 + 1033))) then v325=0;while true do if (v325~=(1873 -(391 + 1482))) then else v224[1394 -(1389 + 2)]=v22();v224[3 + 1]=v22();break;end end break;end end break;end if ((1696 -(1212 + 484))~=v323) then else v324=0;v325=nil;v323=1 -0;end end elseif (v222==(324 -(312 + 11))) then v224[3]=v23();elseif (v222==(1 + 1)) then v224[794 -(451 + 340)]=v23() -((1 + 1)^16);elseif (v222~=3) then else local v339=1138 -(673 + 465);local v340;local v341;local v342;while true do if (0~=v339) then else v340=1403 -(657 + 746);v341=nil;v339=1;end if ((1 + 0)~=v339) then else v342=nil;while true do if ((1 -0)==v340) then while true do if (v341==(498 -(130 + 368))) then v342=0 + 0;while true do if (v342~=0) then else v224[2 + 1]=v23() -((2 + 0)^(78 -62));v224[1983 -(498 + 1481)]=v22();break;end end break;end end break;end if ((1552 -(966 + 586))~=v340) then else local v351=0 + 0;while true do if (v351~=(1324 -(1311 + 12))) then else v340=1;break;end if (v351==(0 + 0)) then v341=0 + 0;v342=nil;v351=2 -1;end end end end break;end end end v273=1;end end break;end end end end break;end if ((0 -0)~=v220) then else v221=0 + 0;v222=nil;v220=1260 -(241 + 1018);end if (v220~=(1 + 0)) then else v223=nil;v224=nil;v220=2;end end end break;end end break;end end break;end end end v52=3;break;end end end if (v52~=3) then else local v102=1778 -(1689 + 89);local v103;while true do if (v102==(504 -(314 + 190))) then v103=0 + 0;while true do local v115=187 -(67 + 120);while true do if (v115==(35 -(7 + 28))) then if (v103==0) then local v119=0 + 0;while true do if (v119~=(651 -(227 + 423))) then else v103=1824 -(485 + 1338);break;end if (v119==(0 + 0)) then for v175=1,v23() do v54[v175-1]=v28();end for v177=1,v23() do v55[v177]=v23();end v119=1;end end end if (v103==(1 + 0)) then return v56;end break;end end end break;end end end v80=665 -(121 + 543);end end end if ((1 + 0)==v74) then if (v52~=(0 + 0)) then else local v96=0 -0;while true do if (v96==(1 + 0)) then v55={};v52=1;break;end if (v96~=(0 -0)) then else v53={};v54={};v96=1 + 0;end end end if (v52==(3 -2)) then local v97=0;local v98;while true do if (v97==0) then v98=0 -0;while true do if (v98~=(4 -3)) then else v58={};v52=7 -5;break;end if (v98~=0) then else local v105=0;while true do if (v105~=1) then else v98=1 + 0;break;end if (v105~=(0 -0)) then else v56={v53,v54,nil,v55};v57=v23();v105=2 -1;end end end end break;end end end break;end end end break;end if (v51==(210 -(189 + 21))) then local v71=0;while true do if (v71~=1) then else v51=1;break;end if (v71~=0) then else v52=0;v53=nil;v71=1364 -(1282 + 81);end end end if (v51==(2 -1)) then local v72=0;while true do if ((2 -1)==v72) then v51=6 -4;break;end if (v72~=(0 -0)) then else v54=nil;v55=nil;v72=1 + 0;end end end if (v51==(6 -4)) then v56=nil;v57=nil;v51=8 -5;end end end local function v29(v35,v36,v37)local v59=0;local v60;local v61;local v62;while true do if (v59==0) then v60=v35[1];v61=v35[2];v59=1;end if (v59==1) then v62=v35[3];return function(...)local v75=1;local v76= -1;local v77={...};local v78=v12("#",...) -1;local function v79()local v81=v60;local v82=v61;local v83=v62;local v84=v27;local v85={};local v86={};local v87={};for v93=1033 -(659 + 374),v78 do if ((v93>=v83) or ((4197 -(614 + 127))==(769 -400))) then v85[v93-v83]=v77[v93 + 1 + 0];else v87[v93]=v77[v93 + 1 + 0];end end local v88=(v78-v83) + 1 + 0;local v89;local v90;while true do local v94=0 -0;local v95;while true do if ((v94==(0 + 0)) or (((358 -(73 + 2)) + 153)>(1505 -466))) then v95=0;while true do if ((v95==(2 -1)) or ((1546 + 27)>=(3240 + 373))) then if ((v90<=(1253 -(471 + 762))) or (3538<(8805 -5852))) then if (((12401 -8356)==(664 + 3381)) and (v90<=(4 + 5))) then if ((1700>=(1652 -1010)) and (v90<=((8 + 1) -5))) then if ((v90<=((1848 -(449 + 677)) -(479 + 242))) or ((3502 -2113)==(5437 -(993 + 96)))) then if (((16 + 673 + 40)==729) and (v90>0)) then local v121=0 + 0;local v122;local v123;local v124;local v125;while true do if (((6120 -(993 + 375 + 179))>(3515 -(221 + 425))) and (v121==1)) then v76=(v124 + v122) -(1 + 0);v125=0;v121=753 -(736 + 15);end if (((10234 -6478)>(589 + 19)) and (v121==((2074 -1332) -(271 + 471)))) then local v225=1572 -(41 + 1531);while true do if ((v225==(0 + 0 + 0)) or (457>=(625 + 573))) then v122=v89[1548 -(210 + 1336)];v123,v124=v84(v87[v122](v87[v122 + 1 + 0]));v225=612 -(457 + 154);end if ((v225==((685 -(674 + 10)) + 0)) or (1458==496)) then v121=1;break;end end end if ((v121==(1245 -(1022 + 221))) or ((506 + (1234 -(283 + 342)))>=(5267 -(7367 -3916)))) then for v232=v122,v76 do local v233=0 + 0;while true do if ((v233==(254 -(248 + 6))) or ((618 -(430 + 118))>(4011 + 250))) then v125=v125 + (1614 -(96 + 216 + 1301));v87[v232]=v123[v125];break;end end end break;end end else v87[v89[875 -(287 + 586)]]=v89[13 -10];end elseif ((v90<=(5 -3)) or ((2791 -1648)==(2147 -(1001 + 95)))) then local v127=0 -(0 -0);local v128;local v129;while true do if (((1210 -(540 + 502))<(12444 -8121)) and ((0 + 0)==v127)) then local v226=0 + (0 -0);while true do if ((v226==(0 -0)) or ((580 + (2014 -(184 + 1041)))<=(2185 -(314 + 1311)))) then v128=v89[2];v129=v87[v128];v226=1090 -(1051 + 38);end if ((1==v226) or ((1769 -(13 + 237))>=(13054 -9349))) then v127=1 -0;break;end end end if (((13109 -9476)>(3068 + 300)) and (v127==1)) then for v234=v128 + 1,v89[2 + 1] do v8(v129,v87[v234]);end break;end end elseif ((v90>(13 -10)) or ((1832 + 1869)==(1502 -(461 + 865)))) then v87[v89[541 -(143 + 396)]]=v87[v89[3]] -v89[2 + 2];else v87[v89[1047 -(514 + 531)]]={};end elseif ((v90<=(526 -(162 + 358))) or ((5797 -2448)>(5406 -(1337 + (616 -269))))) then if (((2921 -(778 + 901))<=(4368 -(48 + 170))) and (v90>(498 -(479 + 14)))) then local v130=(59 -(5 + 54)) -0;local v131;local v132;local v133;while true do if (((539 + 2581)>=(1767 -541)) and (v130==(1465 -(1301 + 164)))) then v131=0;v132=nil;v130=620 -(363 + 256);end if (((7 + 15)<(12798 -8962)) and ((654 -(394 + 259))==v130)) then v133=nil;while true do if ((v131==0) or (3020>3372)) then v132=1690 -(826 + 864);v133=nil;v131=1;end if ((((5314 -(1121 + 853)) -(42 + 1451))<(4777 -2784)) and (v131==1)) then while true do if (((4438 -(524 + 792))==(444 + 2678)) and (v132==0)) then v133=v89[4 -2];v87[v133](v13(v87,v133 + (1 -0),v89[769 -(260 + 506)]));break;end end break;end end break;end end else v87[v89[(2 + 2) -2]]=v36[v89[(3466 -1795) -(849 + 819)]];end elseif ((4094>(794 -484)) and (v90<=(7 + 0))) then v36[v89[3 + 0]]=v87[v89[1804 -(1245 + 557)]];elseif ((2204<=2569) and (v90==(21 -13))) then v87[v89[1 + 1]]=v87[v89[3]];else v87[v89[2]]();end elseif ((v90<=(48 -34)) or (1539<=(772 -(134 + 199)))) then if (((13033 -8086)==(14313 -9366)) and (v90<=(8 + 3))) then if ((v90==(662 -(567 + 85))) or ((1488 -876)>2505)) then local v136=1173 -(1087 + 86);local v137;local v138;local v139;while true do if ((1011<((2392 -(1078 + 417)) + 468)) and (0==v136)) then v137=0;v138=nil;v136=(2134 -(386 + 1556)) -(188 + 3);end if (((1543 -(816 + 726))==v136) or (485>=(4751 -2489))) then v139=nil;while true do if ((3398>(1052 -(263 + 722))) and (v137==((123 -(49 + 73)) + 0))) then while true do if ((v138==(0 -0)) or ((3163 -2204)>(7230 -5194))) then v139=v89[2];v87[v139](v87[v139 + 1]);break;end end break;end if (((617 + 220 + 3747)>1567) and (v137==(0 + 0))) then v138=646 -(245 + 401);v139=nil;v137=672 -(130 + 541);end end break;end end else local v140=0 -0;local v141;local v142;local v143;local v144;local v145;local v146;while true do if ((v140==(13 -10)) or ((3622 -(444 + 1421))==1228)) then while true do if (((6119 -(1197 + 470))>(1033 + 151)) and (v141==(348 -(108 + 168 + 70)))) then v146=nil;while true do if ((3482==(3205 + 136 + 141)) and ((1 -(0 + 0))==v142)) then local v274=(0 + 0) -0;local v275;while true do if (((6382 -(1507 + 50))>(6996 -3953)) and ((0 -0)==v274)) then v275=1157 -(527 + 630);while true do if ((v275==(0 -0)) or ((5325 -(954 + 335))<=(12101 -8700))) then local v310=0;while true do if ((v310==(3 -2)) or ((5525 -2244)>(14350 -(11126 -(299 + 138))))) then v275=1;break;end if (((4096 -2539)<1948) and ((0 + 0)==v310)) then v76=(v145 + v143) -(1 + (142 -(35 + 107)));v146=434 -(315 + 119);v310=1 -0;end end end if (((11499 -7411)>(5274 -(1713 + 181))) and (v275==(1 + (0 -0)))) then v142=2;break;end end break;end end end if (((1726 + 2618)>(3507 -(348 + 456))) and (v142==(1477 -(87 + (3636 -2248))))) then for v283=v143,v76 do local v284=0;local v285;while true do if ((((4464 + 62) -(424 + 250))==(1465 + 2387)) and (v284==(0 -0))) then v285=0 + 0;while true do if ((v285==(0 -0)) or ((4012 + 364)<1405)) then v146=v146 + (572 -((1207 -(636 + 375)) + 375));v87[v283]=v144[v146];break;end end break;end end end break;end if (((0 + 0)==v142) or ((2952 -(48 + 272))>=(9633 -(14497 -8618)))) then local v276=0;while true do if ((v276==(1 + 0)) or (4262<(914 + 749))) then v142=1 + 0;break;end if (((2761 + 593)<(664 + 4012)) and (v276==(1739 -(636 + 1103)))) then v143=v89[2];v144,v145=v84(v87[v143](v13(v87,v143 + 1 + 0,v89[1 + 2])));v276=16 -(7 + 8);end end end end break;end if ((v141==(1651 -((2806 -(25 + 1292)) + 161))) or ((1894 -681)>(3086 -(525 + 49)))) then v144=nil;v145=nil;v141=2;end if ((v141==(0 -0)) or ((4242 + 230)<=(8552 -6042))) then local v241=0 + 0;while true do if (((3126 + 356 + 711)<=4639) and (v241==(1576 -(771 + 805)))) then v142=0;v143=nil;v241=117 -(70 + 46);end if (((720 -(276 + 122))<(3303 -(1211 + 69))) and (v241==(1 -0))) then v141=1;break;end end end end break;end if (((6004 -(1257 + (744 -(408 + 81))))<(3789 + 777)) and (v140==(1950 -((4903 -3079) + (362 -237))))) then v143=nil;v144=nil;v140=2 + 0;end if ((v140==(0 + 0)) or ((5861 -(936 + (1246 -(168 + 874))))==(1217 + 49))) then v141=0;v142=nil;v140=1 -0;end if ((v140==((2 -1) + 1)) or ((1708 + 1910)<=(1416 + 1687))) then v145=nil;v146=nil;v140=3 + 0;end end end elseif ((v90<=(19 -7)) or ((12961 -8705)<(1291 + 1353))) then v87[v89[1374 -(649 + 723)]][v89[212 -(146 + 63)]]=v89[3 + 1];elseif ((v90==(213 -(142 + 58))) or ((17599 -14039)==3621)) then if (((4999 -2657)<(5575 -(37 + 1463))) and (v89[1195 -(795 + 398)]==v87[v89[4]])) then v75=v75 + (646 -(84 + 561));else v75=v89[(4 -1) -0];end else local v182=0 + 0;local v183;local v184;local v185;while true do if (((3447 + 1389)>=(3165 -(369 + 105))) and (v182==(1 + 0))) then v185=nil;while true do if ((2340==2340) and ((94 -(52 + 41))==v183)) then for v277=2 -1, #v86 do local v278=0 -0;local v279;local v280;local v281;while true do if ((v278==(1 -0)) or (((10353 -6927) -(713 + 281))>(13919 -9002))) then v281=nil;while true do if (((11692 -9128)>=(3459 -2575)) and (v279==(1742 -(711 + 1031)))) then v280=0;v281=nil;v279=3 -2;end if (((3532 -2646)<=(798 + 2172)) and (v279==((3 -0) -2))) then while true do if ((3478==(3502 -(22 + 2 + 0))) and (v280==0)) then v281=v86[v277];for v331=1654 -(426 + 1228), #v281 do local v332=1614 -(1549 + (1394 -(766 + 563)));local v333;local v334;local v335;local v336;local v337;while true do if ((v332==(383 -(146 + (571 -336)))) or ((5378 -(1553 + 241))<=(1013 + 513))) then v337=nil;while true do if ((1953<(6822 -2490)) and (v333==2)) then while true do if (((3167 + 1457)>=(7036 -(78 + 5298))) and (v334==(1657 -((2260 -(699 + 424)) + 519)))) then v337=v335[1 + 1];if (((v336==v87) and (v337>=v184)) or ((2441 + 188)>=((936 + 2236) -(14 + 410)))) then local v352=0;local v353;while true do if ((((94 -(28 + 66)) + 0)==v352) or (3277<((4142 + 199) -2003))) then v353=0 -(0 -0);while true do if (((663 + 3876)==(2824 + 1715)) and (v353==(0 -0))) then v185[v337]=v336[v337];v335[(3 -2) + 0]=v185;break;end end break;end end end break;end if ((v334==(0 -0)) or ((3908 + 900)==(3419 -(348 + 1355)))) then local v349=(215 -(182 + 33)) -0;local v350;while true do if ((2057<(5601 -2030)) and (v349==((0 + 0) -0))) then v350=0 + 0;while true do if ((2135<=2822) and (v350==((578 -(84 + 494)) -0))) then v335=v281[v331];v336=v335[1 -0];v350=1;end if (((115 -79)<(2285 -(2748 -(160 + 923)))) and (((1787 -(161 + 1625)) + 0)==v350)) then v334=1668 -(466 + 1201);break;end end break;end end end end break;end if ((v333==(1 + 0)) or ((3875 -(571 + 282))>=(4229 -(224 + 84)))) then local v345=711 -(426 + 285);while true do if ((v345==(3 -2)) or ((2512 + 894)<=(13 + 395))) then v333=9 -7;break;end if ((v345==(0 + 0)) or ((3253 + 989)<2741)) then v336=nil;v337=nil;v345=1 + 0;end end end if ((v333==(0 + 0)) or (2084<=(281 + (214 -138)))) then local v346=674 -(559 + 115);while true do if (((3632 -(53 + 29))==3550) and (v346==(1 + 0))) then v333=3 -2;break;end if ((v346==0) or ((14110 -9760)<=(1564 -(420 + 213)))) then v334=0 + 0;v335=nil;v346=1 -0;end end end end break;end if ((3629==(5386 -(1149 + 608))) and (v332==(1 + 0))) then v335=nil;v336=nil;v332=(347 -(61 + 281)) -3;end if ((v332==(752 -(141 + 611))) or ((3914 -1787)<=(3776 -(1186 + 645)))) then v333=1555 -(222 + 1333);v334=nil;v332=2 -1;end end end break;end end break;end end break;end if ((v278==(0 -0)) or (((6918 -(234 + 65)) -(724 + 1503))==(4920 -((2333 -(126 + 1522)) + 673)))) then v279=0;v280=nil;v278=1 + 0;end end end break;end if (((5036 -(272 + (48 -18)))<=(1806 + 3076)) and (v183==(0 + 0))) then local v253=0 + 0;while true do if (((6081 -4686)>(3173 -(216 + 1714))) and (v253==(539 -(240 + 299)))) then v184=v89[(1240 + 216) -(184 + 1270)];v185={};v253=355 -(80 + 274);end if (((4952 -2854)<(6763 -2469)) and (v253==(411 -(396 + 14)))) then v183=(1358 -(1014 + 39)) -(77 + 226 + 1);break;end end end end break;end if ((1352<=3438) and ((1732 -(1128 + 604))==v182)) then local v240=0 + 0;while true do if ((v240==1) or ((468 + 1877)==(5411 -(3715 -(207 + 90))))) then v182=1 + (1135 -(211 + 924));break;end if (((1809 -(39 + 831))<(195 + 2124)) and (v240==(0 -0))) then v183=0;v184=nil;v240=1 -0;end end end end end elseif ((v90<=(12 + 5)) or (((2110 -1542) -(651 -333))>=(2973 -(34 + 145)))) then if (((3662 + 84 + 879)>((6730 -5116) + 1129)) and (v90<=15)) then v87[v89[2 + 0]]=v89[3]~=0;elseif ((v90==(28 -12)) or (4035<(3181 + 90))) then v87[v89[1 + 1]]=v87[v89[8 -5]][v89[30 -(10 + 16)]];else local v187=(0 + 0) -0;local v188;local v189;local v190;while true do if ((v187==(0 + 0)) or ((11406 -7572)<(308 -153))) then v188=0 + 0;v189=nil;v187=1134 -(423 + 710);end if ((3261>=(2070 + (159 -90))) and (v187==(1930 -((500 -288) + (2496 -(718 + 61)))))) then v190=nil;while true do if (((1571 + 1623)>=((8767 -4544) -(578 + (1254 -(616 + 13))))) and (v188==(198 -(96 + 102)))) then v189=0;v190=nil;v188=4 -3;end if ((4693==(3019 + 1674)) and (v188==(1 + 0))) then while true do if (((5169 -(39 + 225))>=(2329 + 1058)) and (v189==(0 + (0 -0)))) then v190=v89[7 -5];v87[v190]=v87[v190]();break;end end break;end end break;end end end elseif (((5455 -2613)==(4601 -(154 + 1605))) and (v90<=(421 -(378 + (468 -(437 + 6)))))) then v87[v89[346 -(88 + 256)]]=v37[v89[3]];elseif (((6456 -3516)>=(2590 -(462 + 297))) and (v90>(15 + 4))) then local v191=0 + 0;local v192;local v193;local v194;local v195;local v196;while true do if ((1792>610) and ((1720 -(1450 + 270))==v191)) then v192=617 -(310 + 307);v193=nil;v191=1 + 0;end if (((5316 -(3 + 50 + 627))>(3041 -906)) and (v191==(2 + 0))) then v196=nil;while true do if (((19 + 2193)<(5787 -(113 + 1304))) and (v192==(0 -(0 + 0)))) then local v254=796 -(714 + 82);while true do if ((v254==1) or ((2092 -(481 + 852))==(4147 + 635))) then v192=543 -(136 + 406);break;end if ((1565<(19506 -14669)) and ((0 + 0 + 0)==v254)) then v193=1910 -(574 + 1336);v194=nil;v254=1 + 0 + 0;end end end if ((4612>(1339 + 64)) and ((1 + 0)==v192)) then v195=nil;v196=nil;v192=2 + 0;end if ((v192==(1708 -(409 + 1297))) or ((1817 -(788 + 983))>=1216)) then while true do if ((v193==(287 -(6 + 280))) or ((6970 -3470)<=1962)) then v196=v89[3];for v300=1,v196 do v195[v300]=v87[v194 + v300];end break;end if (((4788 -(404 + 295))==(3688 + 401)) and (v193==0)) then local v292=218 -(125 + 93);while true do if ((v292==((3 + 0) -2)) or ((3175 + 352)<=((17340 -(1258 + 355)) -12474))) then v193=1893 -(351 + 1541);break;end if ((v292==(0 + 0)) or ((4471 -(864 + 632))<=(769 -(184 + 355)))) then local v305=0 -0;while true do if ((((2015 + 25) -((1364 -(686 + 344)) + 853))<=(4309 -(655 + 426))) and (v305==(3 -2))) then v292=224 -((408 -(52 + 295)) + 162);break;end if (((1936 + 972)<=(7319 -3635)) and (v305==(0 + (0 -0)))) then v194=v89[2];v195=v87[v194];v305=1 + 0;end end end end end end break;end end break;end if (((1404 + 805)<(8983 -5492)) and (v191==1)) then v194=nil;v195=nil;v191=1078 -(570 + 506);end end else v87[v89[1 + 1]]=v87[v89[3]][v87[v89[3 + 1]]];end elseif ((2345<(9 + 3024)) and (v90<=(659 -(278 + 351)))) then if (((741 -569)<=((11828 -(58 + 1733)) -5640)) and (v90<=(81 -(56 + 0)))) then if ((v90<=(454 -(178 + 254))) or ((6278 -3290)<(441 + 763))) then if ((v90==(994 -(93 + 880))) or (3516==(1987 + 798))) then v87[v89[584 -(366 + 216)]]=v89[3] * v87[v89[11 -(33 -26)]];elseif (((5035 -(7 + 334))>(49 + 1532)) and (v87[v89[8 -6]]~=v89[11 -7])) then v75=v75 + 1 + 0;else v75=v89[(3 -1) + 1];end elseif (((167 + 118)==(477 -192)) and (v90<=(66 -43))) then local v151=0 + 0;local v152;local v153;local v154;while true do if (((3425 -(1566 + 123))<(429 + 3841)) and (1==v151)) then v154=nil;while true do if (((1950 + (2046 -(390 + 866)))>=1174) and (v152==(0 + 0))) then v153=0 + 0;v154=nil;v152=1 + 0;end if (((555 + 175)<=4534) and (1==v152)) then while true do if (((1426 + 665)>=(44 + 1416)) and (v153==((0 -0) -0))) then v154=v89[1091 -(473 + 616)];v87[v154]=v87[v154](v87[v154 + (2 -1)]);break;end end break;end end break;end if ((v151==(0 + 0)) or ((2164 -(1383 + 293))>=(4930 -(770 + (1727 -1113))))) then v152=(629 -(440 + 189)) + 0;v153=nil;v151=189 -(5 + (463 -280));end end elseif ((v90>(71 -(1834 -(888 + 899)))) or ((6600 -4759)<=(125 + 596))) then if (((8800 -5856)>((4729 -(1943 + 51)) -(350 + 926))) and (v87[v89[466 -(84 + (1274 -894))]]==v89[273 -(17 + 252)])) then v75=v75 + 1 + 0;else v75=v89[1 + 2];end else for v227=v89[5 -3],v89[(3274 -1989) -(943 + 339)] do v87[v227]=nil;end end elseif (((1323 + 988)<=(4026 -824)) and (v90<=(528 -(495 + 6)))) then if ((v90==26) or ((997 + 527)>(3894 -(1179 + 458)))) then local v155=0 + 0;local v156;local v157;local v158;while true do if (((2001 -(56 + 1503))>((1119 -335) -(417 + 176))) and (v155==(1 + 0))) then local v229=192 -(159 + 24 + 9);while true do if ((v229==(175 -(161 + 13))) or ((10902 -6120)<=(15649 -12124))) then v155=8 -6;break;end if (((610 + 259)<=(5024 -(503 + 112))) and (v229==(0 + 0))) then v158={};v157=v10({},{__index=function(v245,v246)local v255=0 + 0;local v256;local v257;local v258;while true do if ((v255==((455 + 122) -(195 + 381))) or ((1428 + 559)>=(1197 + 2439))) then v258=nil;while true do if ((v256==(1075 -((1952 -(452 + 965)) + 540))) or (2614==(4290 -(813 + 87)))) then v257=0 + (99 -(58 + 41));v258=nil;v256=1 + 0;end if (((2027 + 1392)<=3771) and (v256==(2 -1))) then while true do if ((v257==(1883 -(611 + 1272))) or ((13801 -9206)==(4288 -(742 + 1228)))) then local v326=0;local v327;while true do if ((4720==(3877 + 843)) and ((0 + 0)==v326)) then v327=570 -(453 + 117);while true do if (((9688 -6034)==(16868 -13214)) and ((1916 -(291 + 1083 + 542))==v327)) then v258=v158[v246];return v258[2 -1][v258[2 -0]];end end break;end end end end break;end end break;end if ((((4014 -(143 + 104)) -1241)>=(2826 -1562)) and ((0 -0)==v255)) then v256=0 -0;v257=nil;v255=1 + (0 -0);end end end,__newindex=function(v247,v248,v249)local v259=618 -(574 + 44);local v260;local v261;local v262;while true do if (((1167 -(553 + 521))<=(5520 -(715 + 264))) and ((1830 -(177 + 1653))==v259)) then v260=0 + 0;v261=nil;v259=1 + 0;end if (((1 + 0)==v259) or ((1868 + 2711)<=(4106 -1799))) then v262=nil;while true do if ((4676>4666) and (v260==(1 + 0))) then while true do if (((2069 + 262)==(7093 -4762)) and (v261==0)) then v262=v158[v248];v262[3 -2][v262[1988 -(549 + 1437)]]=v249;break;end end break;end if ((v260==(988 -(231 + 757))) or ((1874 + 270)<=((563 -332) + 9))) then v261=0 + 0;v262=nil;v260=1 -0;end end break;end end end});v229=1 -0;end end end if ((4750>(12570 -9271)) and (v155==(8 -6))) then for v235=1,v89[4] do local v236=0 -0;local v237;local v238;local v239;while true do if ((v236==(0 -0)) or ((5374 -(449 + 103))==(5035 -3062))) then v237=740 -(583 + 157);v238=nil;v236=114 -(73 + 40);end if ((v236==(1718 -(505 + 1212))) or ((5141 -(157 + 172 + 88))==(1304 -(31 + 316)))) then v239=nil;while true do if ((v237==(523 -(381 + 142))) or ((2232 -(230 + 685))>=(10670 -7230))) then v238=(0 -0) + 0;v239=nil;v237=1 + 0;end if ((1==v237) or ((1295 -860)==4574)) then while true do if ((v238==0) or ((4600 -(355 + 732))>(4517 -(51 + 139)))) then local v302=0;while true do if ((v302==(226 -(16 + 209))) or ((4401 + 287)<(1496 -955))) then v238=1 + 0;break;end if (((1635 -831)==(2755 -1951)) and (v302==0)) then local v322=0 -0;while true do if (((4414 -1389)>1059) and (v322==(1217 -(29 + 114 + 1074)))) then v75=v75 + 1;v239=v81[v75];v322=1 -0;end if ((v322==(2 -1)) or ((5206 -3409)<(1148 -(46 + 279)))) then v302=839 -(312 + 526);break;end end end end end if (((680 + 12 + 141)<2715) and (v238==(336 -(156 + 179)))) then if ((v239[4 -3]==(16 -8)) or (((653 + 163) -(144 + 45))>=((16659 -11051) -(464 + 45 + 167)))) then v158[v235-(995 -(759 + 235))]={v87,v239[181 -((1991 -(1450 + 438)) + 75)]};else v158[v235-(1 -0)]={v36,v239[3]};end v86[ #v86 + (2 -(2 -1))]=v158;break;end end break;end end break;end end end v87[v89[2 -0]]=v29(v156,v157,v37);break;end if ((v155==0) or ((5820 -(576 + 784))<=((13289 -8448) -1285))) then v156=v82[v89[125 -(113 + 9)]];v157=nil;v155=1192 -(802 + 389);end end else local v159=0;local v160;while true do if ((1647>(1901 -(729 + 425))) and (v159==(0 -0))) then v160=v89[268 -(12 + 254)];v87[v160]=v87[v160](v13(v87,v160 + (1 -0),v89[3]));break;end end end elseif ((2225<(904 + 2100)) and (v90<=(532 -(82 + 20 + 402)))) then local v161=0 + 0;local v162;local v163;local v164;local v165;local v166;local v167;while true do if (((950 -(474 + 474))==v161) or ((4483 -3053)>=(5140 -(63 + 579)))) then v166=nil;v167=nil;v161=1 + (893 -(163 + 728));end if ((v161==(8 -5)) or ((4948 -3194)>=(4256 -(43 + 72)))) then while true do if ((v162==(1 -(1408 -(352 + 1056)))) or ((128 + 2251)==(1010 + 2894))) then v165=v163 + 1 + 1;v166={v87[v163](v87[v163 + (300 -(34 + 265))],v87[v165])};v162=8 -6;end if (((82 + 777)==(2517 -1658)) and (v162==(2 + 1))) then if (((3304 + 252)>((10211 -7197) -(1520 + 303))) and v167) then local v263=533 -(513 + 20);local v264;local v265;while true do if (((10 -7)<(2563 -(88 + 238))) and (v263==(3 -2))) then while true do if ((((1745 -(1151 + 468)) -94)==(32 + 0)) and ((767 -(621 + 146))==v264)) then v265=401 -(127 + 274);while true do if (((4478 + 162)>(4663 -(226 + 34))) and ((0 + 0)==v265)) then v87[v165]=v167;v75=v89[1 + 1 + 1];break;end end break;end end break;end if (((26 + 21)<=((18143 -13367) -(749 + 959))) and ((0 + 0 + (267 -(246 + 21)))==v263)) then v264=0;v265=nil;v263=1;end end else v75=v75 + (1369 -(662 + 706));end break;end if ((v162==2) or ((208 + 517)>(2225 -(272 + 30)))) then local v242=0;while true do if ((3492>=(2973 + 92)) and (v242==1)) then v162=1 + 2;break;end if ((v242==(0 -0)) or ((10 + 0)>=(1797 + 662))) then for v286=1,v164 do v87[v165 + v286]=v166[v286];end v167=v166[744 -(284 + 459)];v242=1;end end end if (((1715 -(65 + (2471 -(206 + 779))))<(1812 -(8 + 2 + 2))) and (0==v162)) then local v243=0 + 0;while true do if ((v243==1) or ((492 + 3277)<=((5430 -3587) -(718 + 216)))) then v162=1 -0;break;end if ((v243==(0 + 0)) or ((3533 -(434 + 202))<(1207 -(373 + 232)))) then v163=v89[2];v164=v89[4];v243=1 -0;end end end end break;end if ((v161==(0 + 0)) or ((2601 -(424 + 312))<=(2743 -1886))) then v162=0 + 0;v163=nil;v161=1 -0;end if ((4178>=(5478 -(675 + 912))) and (v161==(1 -0))) then v164=nil;v165=nil;v161=1842 -(1200 + 640);end end elseif (((1435 -290)==(517 + 628)) and (v90>(19 + 10))) then local v198=0 + 0 + 0;local v199;local v200;local v201;local v202;while true do if ((v198==(0 -0)) or (2510<=(3566 -(454 + 987)))) then v199=0 -(0 + 0);v200=nil;v198=1;end if ((v198==(1 + 0)) or (3706==2367)) then v201=nil;v202=nil;v198=1 + 1;end if (((4179 -2502)<((66520 -49137) -13408)) and (v198==(1623 -(1258 + 363)))) then while true do if (((438 + 730)<=1913) and (v199==((3811 -(1224 + 609)) -(1659 + 319)))) then v200=0 + 0;v201=nil;v199=1270 -(892 + 377);end if (((1103 -564)>220) and (v199==(1578 -(1195 + 382)))) then v202=nil;while true do if ((1883<(6498 -(1167 + 806))) and (v200==(1571 -(314 + 1256)))) then v87[v201 + ((5 -3) -1)]=v202;v87[v201]=v202[v89[4]];break;end if (((10891 -6005)>=(1247 + 2427)) and (v200==(0 -0))) then local v295=0 -0;while true do if ((2014>=(1046 + 894)) and (v295==0)) then local v306=0;while true do if ((4787>(9225 -6643)) and (v306==(1 + 0))) then v295=1;break;end if (((5657 -(876 + 928))>=(2469 -(551 + 559))) and (v306==(0 -0))) then v201=v89[2];v202=v87[v89[3]];v306=1452 -(243 + 1208);end end end if ((v295==((2 -1) -0)) or (4799<(5922 -(1335 + 127)))) then v200=3 -2;break;end end end end break;end end break;end end else local v203=0 -0;local v204;local v205;while true do if ((v203==(1 + 0)) or ((4937 -(966 + 20))<(352 + 1911))) then while true do if (((16588 -12400)>(6006 -(411 + 1523))) and ((0 + 0)==v204)) then v205=v89[(21 -15) -4];v87[v205]=v87[v205](v13(v87,v205 + 1,v76));break;end end break;end if ((v203==0) or ((1287 -(458 + 59))>(5472 -(131 + 1716)))) then v204=0 + 0;v205=nil;v203=2 -1;end end end elseif ((v90<=(8 + 27)) or (4624<996)) then if ((v90<=(114 -82)) or ((2964 -1700)>(5576 -1603))) then if (((10044 -7693)<=(4886 -(137 + 303))) and (v90>31)) then local v168=0 + 0;local v169;local v170;local v171;local v172;while true do if ((v168==(1 + 1)) or ((524 + 541)<(510 + 243))) then while true do if ((v169==0) or ((3131 -(107 + 174))<(698 -431))) then v170=v89[1231 -(1001 + 228)];v171={v87[v170](v13(v87,v170 + (1424 -(1326 + 97)),v76))};v169=1 + 0;end if ((((7042 -(756 + 146)) -(3664 -(319 + 173)))<(311 + 4136)) and (v169==(2 -1))) then v172=0 + 0;for v250=v170,v89[11 -(15 -8)] do local v251=0 -0;local v252;while true do if (((1115 -(503 + 612))==v251) or ((453 + 2410)<=1818)) then v252=0;while true do if ((v252==0) or ((404 -116)==(2966 + 67))) then v172=v172 + 1 + 0;v87[v250]=v171[v172];break;end end break;end end end break;end end break;end if (((741 + 2521)>=(3667 -(1081 + 501))) and (v168==0)) then v169=964 -(187 + 777);v170=nil;v168=1;end if ((v168==(1 + 0)) or (((15526 -7205) -3528)<=(2873 -(1064 + 849)))) then v171=nil;v172=nil;v168=342 -((348 -110) + 102);end end else v75=v89[3];end elseif ((v90<=33) or (2197<((3928 -(73 + 41)) -2360))) then v87[v89[2 -0]]=v87[v89[1336 -(1198 + 135)]] + v89[4];elseif ((v90==(67 -33)) or (2808<2339)) then if ( not v87[v89[1 + 1]] or ((265 + 673)>4310)) then v75=v75 + (1 -0);else v75=v89[(1175 -(450 + 200)) -(91 + 431)];end else local v206=633 -(399 + 234);local v207;local v208;local v209;local v210;local v211;while true do if (((1 + 0)==v206) or ((2520 -(1790 + 35))==(1111 -(855 + 73)))) then v209=nil;v210=nil;v206=1 + 1;end if (((1145 + 2143)<(5396 -(174 + 747))) and (v206==2)) then v211=nil;while true do if ((196<(2847 -(1247 + 307))) and (v207==1)) then v210=nil;v211=nil;v207=2 + 0;end if (((3284 -(28 + 77))<4017) and ((149 -(73 + 74))==v207)) then while true do if (((4225 -(536 + 656))==(3149 -(83 + 33))) and (v208==2)) then if (((1472 + 498 + 321)==2291) and (v210>(0 -0))) then if ((v211<=v87[v209 + 1]) or ((3973 -(896 + 789))<=(1925 -(768 + 329)))) then local v313=0 + 0;local v314;local v315;while true do if ((v313==(3 -2)) or (1931<=1079)) then while true do if (((308 -(45 + 263))==v314) or ((982 + (2401 -1503))==897)) then v315=0;while true do if (((267 -(35 + 147))<(2934 -(1027 + 845))) and (v315==(0 -(1989 -(1223 + 766))))) then v75=v89[355 -(282 + 70)];v87[v209 + (417 -(45 + 369))]=v211;break;end end break;end end break;end if ((3271==(5085 -(1282 + 532))) and (v313==0)) then v314=0 -0;v315=nil;v313=1;end end end elseif (((1563 -(311 + 880))<(13690 -10457)) and (v211>=v87[v209 + (1858 -(1512 + 345))])) then local v316=1710 -(157 + 1553);local v317;local v318;while true do if ((v316==(1 -0)) or ((1720 -549)==(957 + 1190))) then while true do if (((1546 + 152)>(1930 -(668 + 1166))) and (v317==(0 -0))) then v318=0;while true do if (((1267 -(294 + 949))<(2071 -(462 + 129))) and (v318==(1825 -(610 + 1215)))) then v75=v89[2 + 1];v87[v209 + 1 + 2]=v211;break;end end break;end end break;end if (((1410 + 711)==(3647 -(501 + 1025))) and (v316==(0 -0))) then v317=0 -0;v318=nil;v316=(1 -0) + 0;end end end break;end if (((6530 -(1331 + 577))>=(10471 -7608)) and (v208==(2 -1))) then local v296=0;while true do if (((5114 -(1784 + 144))>1436) and (v296==((4 -2) -(2 -1)))) then v208=1286 -(925 + 359);break;end if ((3072==(964 + 2108)) and (v296==0)) then v211=v87[v209] + v210;v87[v209]=v211;v296=542 -(209 + 332);end end end if ((((3981 + 968) -3088)==(8134 -6273)) and (v208==(446 -(152 + 294)))) then local v297=0 + 0;while true do if ((v297==(1507 -(91 + 1416))) or (343==(8899 -6102))) then local v308=0 -0;while true do if ((v308==((870 -(697 + 172)) + 0)) or (2481<(2961 -(374 + 620)))) then v297=(657 + 997) -(77 + 1576);break;end if ((0==v308) or (((3099 + 860) -1974)>(2746 + (2305 -1157)))) then v209=v89[883 -(246 + 635)];v210=v87[v209 + 1 + 1];v308=1 + 0;end end end if ((v297==(1 + (1227 -(13 + 1214)))) or ((197 + 237)==37)) then v208=686 -(654 + 31);break;end end end end break;end if (((0 -0)==v207) or (1955>(2503 -(65 + 4)))) then local v267=0;while true do if (((39 + 1968)>(1459 -443)) and (v267==(1611 -(378 + 1232)))) then v207=2 -1;break;end if (((0 -0)==v267) or ((867 + 1961)>=(6642 -2626))) then v208=(14 + 47) -(7 + 54);v209=nil;v267=1 + 0;end end end end break;end if (((1535 -(263 + 155))>(494 -(13 + 129))) and ((952 -(396 + 556))==v206)) then v207=469 -(374 + 95);v208=nil;v206=1462 -(329 + 1132);end end end elseif ((((784 -(15 + 133)) + 416)<=(5343 -(123 + 1 + 702))) and (v90<=(102 -64))) then if (((3324 + 840)>1862) and (v90<=(693 -(39 + 618)))) then do return;end elseif ((2768>=(660 + 1153)) and (v90>(13 + 24))) then local v212=1058 -(776 + 282);local v213;local v214;local v215;local v216;local v217;while true do if (((4015 -((487 -(78 + 318)) + 343))>(1425 -((519 -(422 + 60)) + 217))) and (v212==0)) then v213=0 + 0 + 0;v214=nil;v212=3 -2;end if ((v212==(139 -(24 + 113))) or ((651 + 2805)<=2922)) then v217=nil;while true do if ((v213==(0 + 0)) or ((4730 -(446 + 143))>(3965 + 201))) then local v268=628 -(75 + 553);while true do if ((v268==(2 -1)) or ((7 + 154)>=(6500 -(112 + 1494)))) then v213=3 -2;break;end if ((v268==(736 -(573 + 163))) or ((9220 -6526)>4773)) then v214=305 -(270 + (1104 -(100 + 969)));v215=nil;v268=(3 -0) -2;end end end if (((6 -(99 -(90 + 5)))==v213) or ((1757 -1365)>=(3900 -(1439 + 21)))) then while true do if ((v214==(0 + 0)) or (176>=(1831 -578))) then local v298=(1527 -(1067 + 460)) + 0;while true do if ((v298==(1 + 0)) or (((9418 + 5682) -11688)<=(1491 -(16 + 633)))) then v214=1 -0;break;end if ((v298==((2462 -(640 + 225)) -(890 + 707))) or ((2100 -640)>(3900 -(30 + 542)))) then local v309=0 + 0;while true do if ((v309==(799 -(546 + 253))) or (4037<(4144 -(1169 + 239)))) then v215=v89[2];v216=v87[v215];v309=1;end if ((v309==(4 -3)) or ((1884 + (6240 -4669))==(2381 + 139))) then v298=(209 -86) -(50 + 72);break;end end end end end if ((4239>=(249 -182)) and (v214==(1914 -(1573 + 340)))) then v217=v87[v215 + (3 -1)];if ((v217>0) or ((14388 -9449)<(390 + 3125))) then if ((v216>v87[v215 + 1 + 0]) or (((1614 -(187 + 1252)) + 20)>=(3194 -1983))) then v75=v89[1312 -((2681 -(750 + 640)) + 18)];else v87[v215 + (1194 -(803 + 388))]=v216;end elseif (((2024 + 1473)<=(800 + 3505)) and (v216<v87[v215 + 1 + 0])) then v75=v89[3];else v87[v215 + 1 + (2 -0)]=v216;end break;end end break;end if ((v213==1) or ((711 + 57)>=(2158 -603))) then local v269=0 + 0;while true do if ((v269==(1 + 0)) or (1835<=(160 + 22))) then v213=1766 -(256 + 1508);break;end if (((2198 -1081)==(2441 -1324)) and (v269==(0 -0))) then v216=nil;v217=nil;v269=3 -2;end end end end break;end if (((2271 -(606 + 921))<=((2998 + 315) -(15 + 44))) and (v212==(1545 -(616 + 928)))) then v215=nil;v216=nil;v212=2;end end else v87[v89[1383 -(1120 + 261)]][v89[1075 -(544 + (1295 -767))]]=v87[v89[5 -1]];end elseif ((v90<=(171 -132)) or ((4655 -(1288 + 260))<(1718 -((63 -36) + 442)))) then v37[v89[6 -3]]=v87[v89[2 + 0]];elseif (((2223 + 26)<(917 + 2927)) and (v90>((1055 -(178 + 318)) -(133 + 386)))) then v87[v89[1821 -(748 + 1071)]]= #v87[v89[1058 -(448 + 607)]];elseif (v87[v89[1101 -(873 + 226)]] or ((1433 + 2657)<=(3211 -(92 + 963)))) then v75=v75 + 1 + 0;else v75=v89[8 -5];end v75=v75 + (189 -(76 + (171 -59)));break;end if ((v95==(0 -0)) or ((4737 -(980 + 83))>=(14027 -9209))) then v89=v81[v75];v90=v89[1 + 0];v95=362 -(151 + 210);end end break;end end end end A,B=v27(v11(v79));if  not A[1] then local v91=0;local v92;while true do if (v91==0) then v92=v35[4][v75] or "?";error("Script error at ["   .. v92   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end end end return v29(v28(),{},v17)(...);end v15("LOL!",v9(),...);break;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end end end
